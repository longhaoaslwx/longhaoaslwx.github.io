<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python数据分析之Numpy库入门</title>
    <url>/2020/02/02/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BNumpy%E5%BA%93%E5%85%A5%E9%97%A8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一、数据维度"><a href="#一、数据维度" class="headerlink" title="一、数据维度"></a>一、数据维度</h3><p>  是一组数据的组织形式  </p>
<ul>
<li>一维数据<br>由对等关系的有序或无序数据构成，采用线性方式组织，例如：列表、数组或集合等…<br>在python中用列表或集合类型表示<a id="more"></a></li>
<li>列表与数组<br>都是一组数据的有序结构<br>区别：  <ul>
<li>列表：数据类型可以不同<br>数组：数据类型相同 </li>
</ul>
</li>
<li><p>二维数据<br>由多个一维数据构成，是一维数据的组合方式。表格是典型的二维数据。<br>在python中用列表类型表示</p>
</li>
<li><p>多维数据<br>由一维或者二维数据在新维度上扩展形成。例如：增加了时间维度等等<br>在python中用列表类型表示</p>
</li>
<li><p>高维数据<br>仅利用最基本的二元关系展示数据间的复杂结构。没有数据规整的的组织关系，但却有数据间的包含关系、并列关系及属性关系等…<br>在python中用字典类型或数据表示格式<br>ps：数据表示格式国际公认有三种：JSON、XML和YAML格式</p>
<h3 id="二、Numpy"><a href="#二、Numpy" class="headerlink" title="二、Numpy"></a>二、Numpy</h3><p>NumPy是一个开源的Python科学计算基础库，包含：  </p>
<ul>
<li>一个强大的N维数组对象 ndarray</li>
<li>广播功能函数</li>
<li>整合C/C++/Fortran代码的工具</li>
<li>线性代数、傅里叶变换、随机数生成等功能 </li>
</ul>
<p>NumPy是SciPy、Pandas等数据处理或科学计算库的基础。</p>
<h4 id="Numpy的引用"><a href="#Numpy的引用" class="headerlink" title="Numpy的引用"></a>Numpy的引用</h4><p>import numpy as np(起的别名，方便使用)</p>
</li>
</ul>
<h4 id="N维数组对象：ndarray"><a href="#N维数组对象：ndarray" class="headerlink" title="N维数组对象：ndarray"></a>N维数组对象：ndarray</h4><p>   ndarray数组，其实就是我们线性代数中的矩阵。<br>  举个栗子：计算A²+B³，其中，A和B是一维数组： </p>
<pre><code>#定义数组
def pySum():
   a = [0,1,2,3,4,5]
   b = [9,8,7,6,5,4]
   c = []

for i in range(len(a)):
  c.append(a[i]**2 + b[i]**3)

return c

print(pySum())
</code></pre><p>  上面为常规计算的方法，以下应用科学计算思想的方法：  </p>
<pre><code>def nySum():
   a = np.array([0,1,2,3,4,5])
   b = np.array([9,8,7,6,5,4])

   c = a**2 + b**3

   return c

print(nySum())
</code></pre><p>  从以上两种方法对比，可以看出科学计算更加简便，且常规计算是以一个个元素为关注点。</p>
<h4 id="ndarray特点："><a href="#ndarray特点：" class="headerlink" title="ndarray特点："></a>ndarray特点：</h4><ul>
<li>此数组对象可以去掉元素间运算所需的循环，使一维向量更像单个数据。</li>
<li>设置专门的数组对象，经过优化，可以提升这类应用的运算速度。  </li>
<li><p>数组对象采用相同的数据类型，有助于节省运算和存储空间。</p>
<p><strong>观察：</strong> 科学计算中，一个维度所有数据的类型往往相同的。</p>
</li>
</ul>
<h4 id="ndarray构成："><a href="#ndarray构成：" class="headerlink" title="ndarray构成："></a>ndarray构成：</h4><p>  ndarray是一个多维数组对象，由两部分构成：</p>
<ul>
<li>实际的数据</li>
<li>描述这些数据的元数据（数据维度、数据类型等）  </li>
</ul>
<p>ndarray数组一般要求所有元素类型相同（同质），数组下标从0开始</p>
<h4 id="ndarray实例："><a href="#ndarray实例：" class="headerlink" title="ndarray实例："></a>ndarray实例：</h4><p><img src="http://q5a1wu8m8.bkt.clouddn.com/blog/20200206/hHDWWtIgjv2R.png?imageslim" alt="ndarray实例"></p>
<h4 id="ndarray对象的属性"><a href="#ndarray对象的属性" class="headerlink" title="ndarray对象的属性"></a>ndarray对象的属性</h4><table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>.ndim</td>
<td>秩，即轴的数量或维度的数量</td>
</tr>
<tr>
<td>.shape</td>
<td>ndarray对象的尺度，对于矩阵，n行m列</td>
</tr>
<tr>
<td>.size</td>
<td>ndarray对象元素的个数，相当于.shape中n*m的值</td>
</tr>
<tr>
<td>.dtype</td>
<td>ndarray对象的元素类型</td>
</tr>
<tr>
<td>.itemsize</td>
<td>ndarray对象中每个元素的大小，以字节为单位</td>
</tr>
</tbody>
</table>
<h4 id="ndarray元素类型"><a href="#ndarray元素类型" class="headerlink" title="ndarray元素类型"></a>ndarray元素类型</h4><table>
<thead>
<tr>
<th>数据类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>bool</td>
<td>布尔类型，True或False</td>
</tr>
<tr>
<td>intc</td>
<td>与C语言中的int类型一致，一般是int32或int64</td>
</tr>
<tr>
<td>intp</td>
<td>用于索引的整数，与C语言中ssize_t一致，int32或int64</td>
</tr>
<tr>
<td>int8</td>
<td>字节长度的整数，取值：[‐128, 127]</td>
</tr>
<tr>
<td>int16</td>
<td>16位长度的整数，取值：[‐32768, 32767]</td>
</tr>
<tr>
<td>int32</td>
<td>32位长度的整数，取值：[‐231, 231‐1]</td>
</tr>
<tr>
<td>int64</td>
<td>64位长度的整数，取值：[‐263, 263‐1]</td>
</tr>
<tr>
<td>uint8</td>
<td>8位无符号整数，取值：[0, 255]</td>
</tr>
<tr>
<td>uint16</td>
<td>16位无符号整数，取值：[0, 65535]</td>
</tr>
<tr>
<td>uint32</td>
<td>32位无符号整数，取值：[0, 232‐1]</td>
</tr>
<tr>
<td>uint64</td>
<td>32位无符号整数，取值：[0, 264‐1]</td>
</tr>
<tr>
<td>float16</td>
<td>16位半精度浮点数：1位符号位，5位指数，10位尾数</td>
</tr>
<tr>
<td>float32</td>
<td>32位半精度浮点数：1位符号位，8位指数，23位尾数</td>
</tr>
<tr>
<td>float64</td>
<td>64位半精度浮点数：1位符号位，11位指数，52位尾数</td>
</tr>
<tr>
<td>complex64</td>
<td>复数类型，实部和虚部都是32位浮点数</td>
</tr>
<tr>
<td>complex128</td>
<td>复数类型，实部和虚部都是64位浮点数</td>
</tr>
</tbody>
</table>
<p><strong>ps：</strong> </p>
<ol>
<li>float类型：(符号)尾数*10指数</li>
<li>complex类型：实部(.real) + j虚部(.imag)</li>
<li><strong>ndarray为什么要支持这么多种元素类型呢？</strong><br><strong>对比：</strong>  Python语法仅支持整数、浮点数和复数3种类型<ul>
<li>科学计算涉及数据较多，对存储和性能都有较高要求</li>
<li>对元素类型精细定义，有助于NumPy合理使用存储空间并优化性能</li>
<li>对元素类型精细定义，有助于程序员对程序规模有合理评估</li>
</ul>
</li>
</ol>
<h4 id="ndarray数组的创建方法"><a href="#ndarray数组的创建方法" class="headerlink" title="ndarray数组的创建方法"></a>ndarray数组的创建方法</h4><ul>
<li><p>从Python中的列表、元组等类型创建ndarray数组<br>使用方法：</p>
<pre><code>x = np.array(list/tuple)

# 可指定元素类型
x = np.array(list/tuple,dtybe=np.float32)
</code></pre><p>  当np.array()不指定dtype时，NumPy将根据数据情况关联一个dtype类型。</p>
<p>  实例：  </p>
<p>  <img src="Python数据分析之Numpy库入门/创建ndarray数组(一" alt="列表、元组等创建数组">.png)</p>
</li>
<li><p>使用NumPy中函数创建ndarray数组，如：arange, ones, zeros等<br>使用方法： </p>
<p>  函数 | 说明<br>  ————-|—————-<br>  np.arange(n) | 类似range()函数，返回ndarray类型，元素从0到n‐1，里面需要传入三个参数，但是是一维的，前两个元素是范围，最后一个参数是步长。arange中的range要比python中的range函数多一个功能，步长（step）可以是小数。创建的是一维数组。<br>  np.ones(shape) | 根据shape生成一个全1数组，shape是元组类型，<code>shape：数组的shape叫做数组的形状：一个数组，从高维，到低维，每个维度中元素的个数。</code>(高维元素的个数,次高维元素的个数,…最低维元素的个数)<br>  np.zeros(shape) | 根据shape生成一个全0数组，shape是元组类型,与ones一样，只是填充的是0。<br>  np.full(shape,val) | 根据shape生成一个数组，每个元素值都是val<br>  np.eye(n) | 创建一个正方的n*n单位矩阵，对角线为1，其余为0</p>
<p>  实例：  </p>
<p>  <img src="Python数据分析之Numpy库入门/创建ndarray数组(二" alt="函数等创建数组">.png)</p>
<p>  函数 | 说明<br>  ———-|—————-<br>  np.ones_like(a) | 根据数组a的形状生成一个全1数组<br>  np.zeros_like(a) | 根据数组a的形状生成一个全0数组<br>  np.full_like(a,val) | 根据数组a的形状生成一个数组，每个元素值都是val</p>
<p>  其他函数：<br>  函数 | 说明<br>  —————|————–<br>  np.linspace() | 根据起止数据等间距地填充数据，形成数组<br>  np.concatenate() | 将两个或多个数组合并成一个新的数组<br>  实例：  </p>
<pre><code># param: start 起始位置
# param: end 结束位置
# param: num 等差数列需要的元素,默认值是50
# endpoint = True 默认包含end，可以通过设置为False来不包含 end

np.linspace(start,end,num,endpoint)
</code></pre><p>  <img src="Python数据分析之Numpy库入门/创建ndarray数组(三" alt="列表、元组等创建数组">.png)<br>  ps：endpoint表示最后一个元素是否为生成数组中的一个，如果<code>endpoint=false</code>，则最后一个元素不加入生成数组中。</p>
</li>
<li><p>从字节流（raw bytes）中创建ndarray数组 </p>
</li>
<li><p>从文件中读取特定格式，创建ndarray数组</p>
<p>创建数组函数的区别，详情可见：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NwbHdpbi9hcnRpY2xlL2RldGFpbHMvMTAzODIwODQ2" title="https://blog.csdn.net/cplwin/article/details/103820846">文章链接<i class="fa fa-external-link"></i></span> </p>
</li>
</ul>
<h4 id="ndarray数组变换"><a href="#ndarray数组变换" class="headerlink" title="ndarray数组变换"></a>ndarray数组变换</h4><p>  对于创建后的ndarray数组，可以对其进行维度变换和元素类型变换  </p>
<pre><code>a = np.ones((2,3,4), dtype=np.int32)
</code></pre><table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>.reshape(shape)</td>
<td>不改变数组元素，返回一个shape形状的数组，原数组不变</td>
</tr>
<tr>
<td>.resize(shape)</td>
<td>与.reshape()功能一致，但修改原数组</td>
</tr>
<tr>
<td>.swapaxes(ax1,ax2)</td>
<td>将数组n个维度中两个维度进行调换</td>
</tr>
<tr>
<td>.flatten()</td>
<td>对数组进行降维，返回折叠后的一维数组，原数组不变</td>
</tr>
</tbody>
</table>
<pre><code>new_a = a.astype(new_type)
</code></pre><p>astype()方法一定会创建新的数组（原始数据的一个拷贝），即使两个类型一致</p>
<h4 id="ndarray数组向列表的转换"><a href="#ndarray数组向列表的转换" class="headerlink" title="ndarray数组向列表的转换"></a>ndarray数组向列表的转换</h4><pre><code>ls = a.tolist()
</code></pre><p>   示例：<br>   <img src="Python数据分析之Numpy库入门/ndarray数组向列表转换.png" alt="ndarray数组向列表的转换"></p>
<h3 id="三、ndarray数组的操作"><a href="#三、ndarray数组的操作" class="headerlink" title="三、ndarray数组的操作"></a>三、ndarray数组的操作</h3><h4 id="数组的索引和切片"><a href="#数组的索引和切片" class="headerlink" title="数组的索引和切片"></a>数组的索引和切片</h4><ul>
<li>索引：获取数组中特定位置元素的过程</li>
<li>切片：获取数组元素子集的过程</li>
<li>一维数组的索引和切片：与Python的列表类似<br><img src="Python数据分析之Numpy库入门/数组索引和切片（一）.png" alt="一维数组的索引和切片"></li>
<li>多维数组的索引：<br><img src="Python数据分析之Numpy库入门/多维数组索引.png" alt="多维数组的索引"></li>
<li>多维数组的切片：<br><img src="Python数据分析之Numpy库入门/多维数组切片.png" alt="多维数组的切片"></li>
</ul>
<h4 id="ndarray数组的运算"><a href="#ndarray数组的运算" class="headerlink" title="ndarray数组的运算"></a>ndarray数组的运算</h4><p>  数组与标量之间的运算<br>  数组与标量之间的运算作用于数组的每一个元素<br>  实例：</p>
<p>   <img src="Python数据分析之Numpy库入门/数组与标量之间的运算.png" alt="数组运算">   </p>
<h4 id="NumPy一元函数"><a href="#NumPy一元函数" class="headerlink" title="NumPy一元函数"></a>NumPy一元函数</h4><p>对ndarray中的数据执行元素级运算的函数<br>函数 | 说明<br>————|—————-<br>np.abs(x) np.fabs(x) | 计算数组各元素的绝对值<br>np.sqrt(x) | 计算数组各元素的平方根<br>np.square(x) | 计算数组各元素的平方<br>np.log(x) np.log10(x)  np.log2(x) | 计算数组各元素的自然对数、10底对数和2底对数<br>np.ceil(x) np.floor(x) | 计算数组各元素的ceiling值或 floor值<br>np.rint(x) | 计算数组各元素的四舍五入值<br>np.modf(x) | 将数组各元素的小数和整数部分以两个独立数组形式返回<br>np.cos(x) np.cosh(x) np.sin(x) np.sinh(x) np.tan(x) np.tanh(x) | 计算数组各元素的普通型和双曲型三角函数<br>np.exp(x) | 计算数组各元素的指数值<br>np.sign(x) | 计算数组各元素的符号值，1(+), 0, ‐1(‐)</p>
<p><img src="Python数据分析之Numpy库入门/NumPy一元函数实例.png" alt="NumPy一元函数实例"> </p>
<h4 id="NumPy二元函数"><a href="#NumPy二元函数" class="headerlink" title="NumPy二元函数"></a>NumPy二元函数</h4><table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>+ ‐ * / **</td>
<td>两个数组各元素进行对应运算</td>
</tr>
<tr>
<td>np.maximum(x,y) np.fmax() np.minimum(x,y) np.fmin()</td>
<td>元素级的最大值/最小值计算</td>
</tr>
<tr>
<td>np.mod(x,y)</td>
<td>元素级的模运算</td>
</tr>
<tr>
<td>np.copysign(x,y)</td>
<td>将数组y中各元素值的符号赋值给数组x对应元素</td>
</tr>
<tr>
<td>&gt; &lt; &gt;= &lt;= == !=</td>
<td>算术比较，产生布尔型数组</td>
</tr>
</tbody>
</table>
<p><img src="Python数据分析之Numpy库入门/NumPy二元函数实例.png" alt="NumPy二元函数实例"></p>
<h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p><img src="Python数据分析之Numpy库入门/总结.png" alt="NumPy总结"></p>
]]></content>
      <categories>
        <category>编程基础</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>编程</tag>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集（一）</title>
    <url>/2020/01/23/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、收集域名信息"><a href="#一、收集域名信息" class="headerlink" title="一、收集域名信息"></a>一、收集域名信息</h2><h3 id="Whois查询"><a href="#Whois查询" class="headerlink" title="Whois查询"></a>Whois查询</h3><p>  Whois，是用来查询域名的IP以及所有者等信息的传输协议。简单来说，就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库，其中包含域名所有人、域名注册商、域名注册日期和过期日期、DNS等。通过域名Whois服务器查询，可以查询域名归属者联系方式，以及注册和到期时间。<br><a id="more"></a><br>    Kali下whois查询<br>    <span class="exturl" data-url="aHR0cHM6Ly93d3cua2FsaS5vcmcvZG93bmxvYWRzLw==" title="https://www.kali.org/downloads/">https://www.kali.org/downloads/<i class="fa fa-external-link"></i></span></p>
<pre><code>域名Whois查询 - 站长之家 
http://whois.chinaz.com/

Whois 爱站 
http://whois.aizhan.com/

ip138 
https://site.ip138.com/

Whois Lookup 
https://www.whois.net/

ICANN Lookup 
https://lookup.icann.org/

域名信息查询 - 腾讯云  
https://whois.cloud.tencent.com/domain?domain=

nicolasbouliane 
http://nicolasbouliane.com/ utils/whois/?url=http://baidu.com

新网 whois信息查询 
http://whois.xinnet.com/

IP WHOIS查询 - 站长工具 
http:// tool.chinaz.com/ipwhois/
</code></pre><h3 id="Whois网络注册信息探测"><a href="#Whois网络注册信息探测" class="headerlink" title="Whois网络注册信息探测"></a>Whois网络注册信息探测</h3><p>  合天智汇实验网址：<br>  <span class="exturl" data-url="aHR0cDovL3d3dy5oZXRpYW5sYWIuY29tL2V4cGMuZG8/ZWM9NjZhMTgwNjMtODI4Ny00YjdjLTlkZmQtOTdmYWY1MjI4MmYx" title="http://www.hetianlab.com/expc.do?ec=66a18063-8287-4b7c-9dfd-97faf52282f1">http://www.hetianlab.com/expc.do?ec=66a18063-8287-4b7c-9dfd-97faf52282f1<i class="fa fa-external-link"></i></span>  </p>
<ol>
<li><p>备案信息查询<br>国内网站注册需要向国家有关部门申请备案，防止网站从事非法活动，而国外网站不需要备案。  </p>
<p>ICP备案查询网<br><span class="exturl" data-url="aHR0cDovL3d3dy5iZWlhbmJlaWFuLmNvbS8=" title="http://www.beianbeian.com/">http://www.beianbeian.com/<i class="fa fa-external-link"></i></span></p>
<p>ICP备案查询 - 站长工具<br><span class="exturl" data-url="aHR0cDovL2ljcC5jaGluYXouY29tLw==" title="http://icp.chinaz.com/">http://icp.chinaz.com/<i class="fa fa-external-link"></i></span></p>
<p>SEO综合查询 - 爱站<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWl6aGFuLmNvbS9zZW8v" title="https://www.aizhan.com/seo/">https://www.aizhan.com/seo/<i class="fa fa-external-link"></i></span></p>
<p>批量查询 - 站长工具<br><span class="exturl" data-url="aHR0cDovL2ljcC5jaGluYXouY29tL3NlYXJjaHM=" title="http://icp.chinaz.com/searchs">http://icp.chinaz.com/searchs<i class="fa fa-external-link"></i></span></p>
<p>工业和信息化部ICP/IP/域名信息备案管理 <span class="exturl" data-url="aHR0cDovL3d3dy5iZWlhbi5taWl0Lmdvdi5jbi9wdWJsaXNoL3F1ZXJ5L2luZGV4Rmlyc3QuYWN0aW9u" title="http://www.beian.miit.gov.cn/publish/query/indexFirst.action">http://www.beian.miit.gov.cn/publish/query/indexFirst.action<i class="fa fa-external-link"></i></span></p>
</li>
<li><p>信用信息查询  </p>
<p>国家企业信用信息公示系统<br><span class="exturl" data-url="aHR0cDovL3d3dy5nc3h0Lmdvdi5jbi9pbmRleC5odG1s" title="http://www.gsxt.gov.cn/index.html">http://www.gsxt.gov.cn/index.html<i class="fa fa-external-link"></i></span><br>全国企业信息查询<br><span class="exturl" data-url="aHR0cDovL2NvbXBhbnkueGl6aGkuY29tLw==" title="http://company.xizhi.com/">http://company.xizhi.com/<i class="fa fa-external-link"></i></span><br>个人信用查询搜索-企业信息查询搜索-统一社会信用代码查询-信用中国<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuY3JlZGl0Y2hpbmEuZ292LmNuLw==" title="https://www.creditchina.gov.cn/">https://www.creditchina.gov.cn/<i class="fa fa-external-link"></i></span></p>
</li>
</ol>
<h3 id="IP反查站点网站"><a href="#IP反查站点网站" class="headerlink" title="IP反查站点网站"></a>IP反查站点网站</h3><ol>
<li><p>在线网站<br>Dnslytics<br><span class="exturl" data-url="aHR0cHM6Ly9kbnNseXRpY3MuY29tLw==" title="https://dnslytics.com/">https://dnslytics.com/<i class="fa fa-external-link"></i></span><br>利用Dnslytics反查IP可以得到如下信息：</p>
<p>IP information  #IP信息<br>Network information #网络信息<br>Hosting information #主机信息<br>SPAM database lookup #垃圾邮件数据库查询<br>Open TCP/UDP ports #开放的TCP / UDP端口<br>Blocklist lookup #过滤清单查询<br>Whois information #Whois信息<br>Geo information #地理信息<br>Country information #国家信息<br>Update information #更新信息</p>
<p>利用Dnslytics反查域名可以得到如下信息：  </p>
<p>Domain and Ranking Information #域名和排名信息<br>Hosting Information{ #主机信息<br> A / AAAA Record<br> NS Record<br> MX Record<br> SPF Record<br>}<br>Web Information #Web信息<br>Whois Information #Whois信息</p>
</li>
<li><p>浏览器插件<br>通过Google、FireFox等插件的使用，收集域名信息<br>myip.ms  </p>
</li>
<li><p>收集相关应用信息  </p>
</li>
</ol>
<ul>
<li>天眼查<br><span class="exturl" data-url="aHR0cHM6Ly93d3cudGlhbnlhbmNoYS5jb20v" title="https://www.tianyancha.com/">https://www.tianyancha.com/<i class="fa fa-external-link"></i></span>  </li>
<li>企查查<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucWljaGFjaGEuY29tLw==" title="https://www.qichacha.com/">https://www.qichacha.com/<i class="fa fa-external-link"></i></span>  </li>
</ul>
<ol start="4">
<li><p>微信公众号&amp;微博<br>根据获取的企业名称可以获取目标企业的微信公众号、微博、备案站点、软件著作权等信息。<br>天眼查-商业安全工具<br><span class="exturl" data-url="aHR0cHM6Ly93d3cudGlhbnlhbmNoYS5jb20v" title="https://www.tianyancha.com/">https://www.tianyancha.com/<i class="fa fa-external-link"></i></span></p>
</li>
<li><p>APP查询  </p>
</li>
</ol>
<ul>
<li>七麦数据<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucWltYWkuY24v" title="https://www.qimai.cn/">https://www.qimai.cn/<i class="fa fa-external-link"></i></span>  </li>
<li>AppStore<br><span class="exturl" data-url="aHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS8=" title="https://apps.apple.com/">https://apps.apple.com/<i class="fa fa-external-link"></i></span><br>通过当前APP查询同开发商应用，得到目标所有APP应用</li>
</ul>
<h2 id="二、收集子域名信息"><a href="#二、收集子域名信息" class="headerlink" title="二、收集子域名信息"></a>二、收集子域名信息</h2><p>  子域名也就是二级域名，是指顶级域名下的域名。一般主域都是重点防护区域，所以不如先进入目标的某个子域，然后再想办法迂回接近真正的目标，这无疑是个比较好的选择。那么问题来了，怎样才能尽可能多地搜集目标的高价值子域呢？常用的方法有以下这几种。  </p>
<h3 id="在线平台"><a href="#在线平台" class="headerlink" title="在线平台"></a>在线平台</h3><p>  第三方平台查询<br>  主要是一些第三方网站和一些博主提供的服务   </p>
<pre><code>ip138  
https://site.ip138.com/  

站长工具   
http://tool.chinaz.com/subdomain/?  domain=

hackertarget   
https://hackertarget.com/find-dns-host-records/

phpinfo   
https://phpinfo.me/domain/

t1h2ua   
https://www.t1h2ua.cn/tools/

dnsdumpster   
https://dnsdumpster.com/

chinacycc   
https://d.chinacycc.com/

zcjun   
http://z.zcjun.com/
</code></pre><h3 id="权重综合查询"><a href="#权重综合查询" class="headerlink" title="权重综合查询"></a>权重综合查询</h3><p>  爱站<br>  <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWl6aGFuLmNvbS9zZW8v" title="https://www.aizhan.com/seo/">https://www.aizhan.com/seo/<i class="fa fa-external-link"></i></span><br>  站长工具<br>  <span class="exturl" data-url="aHR0cDovL3JhbmsuY2hpbmF6LmNvbS9hbGwv" title="http://rank.chinaz.com/all/">http://rank.chinaz.com/all/<i class="fa fa-external-link"></i></span></p>
<h3 id="全国政府网站基本数据库"><a href="#全国政府网站基本数据库" class="headerlink" title="全国政府网站基本数据库"></a>全国政府网站基本数据库</h3><p>   <span class="exturl" data-url="aHR0cDovLzExNC41NS4xODEuMjgvZGF0YWJhc2VJbmZvL2luZGV4" title="http://114.55.181.28/databaseInfo/index">http://114.55.181.28/databaseInfo/index<i class="fa fa-external-link"></i></span>  </p>
<h3 id="IP反查绑定域名网站"><a href="#IP反查绑定域名网站" class="headerlink" title="IP反查绑定域名网站"></a>IP反查绑定域名网站</h3><p>  IP关联域名，大部分网站一个IP多个域名  </p>
<pre><code>http://s.tool.chinaz.com/same?s

http://dns.aizhan.com/  
</code></pre><h3 id="资产搜索引擎"><a href="#资产搜索引擎" class="headerlink" title="资产搜索引擎"></a>资产搜索引擎</h3><p>  google、shodan、FOFA、zoomeye  </p>
<ul>
<li><p>Google语法查询<br>搜索子域名 “site:xxxxx”，更多Google查询语法可以自己查询，之后整理一篇，以备后用。  </p>
</li>
<li><p>FOFA语法查询<br><span class="exturl" data-url="aHR0cHM6Ly9mb2ZhLnNvLw==" title="https://fofa.so/">https://fofa.so/<i class="fa fa-external-link"></i></span><br>搜索子域名 “domain:xxxxx”</p>
</li>
</ul>
<h3 id="工具枚举"><a href="#工具枚举" class="headerlink" title="工具枚举"></a>工具枚举</h3><p>  常用子域名工具如下（Github上都可搜到，需要自行下载）  </p>
<ul>
<li>OneForAll</li>
<li>Layer</li>
<li>Sublist3r</li>
<li>subDomainsBrute</li>
<li>K8</li>
<li>wydomain</li>
<li>dnsmaper</li>
<li>dnsbrute</li>
<li>Findomain</li>
<li>fierce<br>还有很多，其他可以自行去各大网站寻找</li>
</ul>
<h4 id="OneForAll"><a href="#OneForAll" class="headerlink" title="OneForAll"></a>OneForAll</h4><p>  OneForAll是一款功能强大的子域收集工具，拥有多个模块和接口扫描，收集子域信息很全，包括子域、子域IP、子域常用端口、子域Title、子域Banner、子域状态等。   </p>
<p>  项目地址：<br>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NobWlseWx0eS9PbmVGb3JBbGw=" title="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll<i class="fa fa-external-link"></i></span>  </p>
<p>  子域名收集：  </p>
<pre><code>python3 oneforall.py --target=target.com run
</code></pre><h4 id="Layer"><a href="#Layer" class="headerlink" title="Layer"></a>Layer</h4><p>  Layer子域名挖掘机的使用方法比较简单，在域名对话框中直接输入域名就可以进行扫描，它的显示界面比较细致，有域名、解析IP、开放端口、Web服务器和网站状态等。</p>
<h4 id="subDomainsBrute"><a href="#subDomainsBrute" class="headerlink" title="subDomainsBrute"></a>subDomainsBrute</h4><p>  subDomainsBrute的特点是可以用小字典递归地发现三级域名、四级域名,甚至五级域名等不容易被探测到的域名。<br>  项目地址：<br>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpamllamllL3N1YkRvbWFpbnNCcnV0ZQ==" title="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute<i class="fa fa-external-link"></i></span></p>
<p>  子域名收集：  </p>
<pre><code>python subDomainsbrute.py ***.com
</code></pre><h4 id="Sublist3r"><a href="#Sublist3r" class="headerlink" title="Sublist3r"></a>Sublist3r</h4><p>  Sublist3r也是一个比较常用的工具， 它能列举多种资源，如在Google、Yahoo、 Bing、 Baidu和Ask等搜索引擎中可查到的子域名，还可以列出Netcraft、VirusTotal、ThreatCrowd、 DNSdumpster、SSL Certificates、和Reverse DNS查到的子域名。<br>  项目地址：<br>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xhL1N1Ymxpc3Qzcg==" title="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r<i class="fa fa-external-link"></i></span></p>
<p>  子域名收集： </p>
<pre><code>python sublist3r.py -d ***.com -b -t 50 -p 80,443,21,22
</code></pre><h2 id="三、证书透明度公开日志枚举"><a href="#三、证书透明度公开日志枚举" class="headerlink" title="三、证书透明度公开日志枚举"></a>三、证书透明度公开日志枚举</h2><p>  证书透明度(Certificate Transparency, CT)是证书授权机构(CA) 的一个项目，证书授权机构会将每个SSL/TLS证书发布到公共日志中。一个SSL/TLS证书通常包含域名、子域名和邮件地址， 这些也经常成为攻击者非常希望获得的有用信息。查找某个域名所属证书的最简单的方法就是使用搜索引|擎搜索一些公开的CT日志。  </p>
<h3 id="在线第三方平台查询"><a href="#在线第三方平台查询" class="headerlink" title="在线第三方平台查询"></a>在线第三方平台查询</h3><p>  crt.sh:<br>  <span class="exturl" data-url="aHR0cHM6Ly9jcnQuc2g=" title="https://crt.sh">https://crt.sh<i class="fa fa-external-link"></i></span><br>  censys:<br>  <span class="exturl" data-url="aHR0cHM6Ly9jZW5zeXMuaW8=" title="https://censys.io">https://censys.io<i class="fa fa-external-link"></i></span><br>  myssl：<br>  <span class="exturl" data-url="aHR0cHM6Ly9teXNzbC5jb20=" title="https://myssl.com">https://myssl.com<i class="fa fa-external-link"></i></span></p>
<h3 id="工具枚举查询"><a href="#工具枚举查询" class="headerlink" title="工具枚举查询"></a>工具枚举查询</h3><p>  通过工具可以调用各个证书接口进行域名查询  </p>
<p>  常用工具：<br>  Findomain<br>  Sublist3r（SSL Certificates）等  </p>
<h4 id="Findomain"><a href="#Findomain" class="headerlink" title="Findomain"></a>Findomain</h4><p>  Findomain不使用子域名寻找的常规方法，而是使用证书透明度日志来查找子域，并且该方法使其工具更加快速和可靠。该工具使用多个公共API来执行搜索。  </p>
<p>  项目地址：<br>  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0VkdTRyZFNITC9maW5kb21haW4=" title="https://github.com/Edu4rdSHL/findomain">https://github.com/Edu4rdSHL/findomain<i class="fa fa-external-link"></i></span> </p>
<p>  子域名收集：  </p>
<pre><code>findomain -t target.com

使用所有API搜索子域并将数据导出到CSV文件：findomain -t target.com -a -o csv
</code></pre><h2 id="四、DNS历史解析"><a href="#四、DNS历史解析" class="headerlink" title="四、DNS历史解析"></a>四、DNS历史解析</h2><p>  dnsdb<br>  <span class="exturl" data-url="aHR0cHM6Ly93d3cuZG5zZGIuaW8=" title="https://www.dnsdb.io">https://www.dnsdb.io<i class="fa fa-external-link"></i></span>  </p>
<p>  viewdns<br>  <span class="exturl" data-url="aHR0cHM6Ly92aWV3ZG5zLmluZm8=" title="https://viewdns.info">https://viewdns.info<i class="fa fa-external-link"></i></span></p>
<h2 id="五、DNS域传送漏洞"><a href="#五、DNS域传送漏洞" class="headerlink" title="五、DNS域传送漏洞"></a>五、DNS域传送漏洞</h2><p>  目前来看”DNS域传送漏洞”已经很少了。</p>
<h3 id="DNS记录类型"><a href="#DNS记录类型" class="headerlink" title="DNS记录类型"></a>DNS记录类型</h3><pre><code>A记录       IP地址记录,记录一个域名对应的IP地址
AAAA记录    IPv6地址记录，记录一个域名对应的IPv6地址
CNAME记录   别名记录，记录一个主机的别名
MX记录      电子邮件交换记录，记录一个邮件域名对应的IP地址
NS记录      域名服务器记录 ,记录该域名由哪台域名服务器解析
PTR记录     反向记录，也即从IP地址到域名的一条记录
TXT记录     记录域名的相关文本信息
</code></pre><h3 id="DNS信息收集"><a href="#DNS信息收集" class="headerlink" title="DNS信息收集"></a>DNS信息收集</h3><p>  工具：</p>
<ul>
<li>dnsrecon</li>
<li>fierce</li>
<li>dnsmap</li>
</ul>
<h3 id="DNS注册信息"><a href="#DNS注册信息" class="headerlink" title="DNS注册信息"></a>DNS注册信息</h3><p>  Whois查询</p>
<h3 id="DNS域传送漏洞原理"><a href="#DNS域传送漏洞原理" class="headerlink" title="DNS域传送漏洞原理"></a>DNS域传送漏洞原理</h3><p>  DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。  </p>
<p>  域传送是指备份服务器从主服务器拷贝数据，并用得到的数据更新自身数据库。</p>
<p>  若DNS服务器配置不当，可能导致攻击者获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。同时，黑客可以快速的判定出某个特定zone的所有主机，收集域信息，选择攻击目标，找出未使用的IP地址，绕过基于网络的访问控制。</p>
<h3 id="DNS域传送漏洞检测"><a href="#DNS域传送漏洞检测" class="headerlink" title="DNS域传送漏洞检测"></a>DNS域传送漏洞检测</h3><ul>
<li><p>nslookup  </p>
<p>基本过程：</p>
</li>
</ul>
<ol>
<li><blockquote>
<p>nslookup             #进入交互式shell </p>
</blockquote>
</li>
<li><blockquote>
<p>server dns.xx.yy.zz  #设定查询将要使用的DNS服务器    </p>
</blockquote>
</li>
<li><blockquote>
<p>ls xx.yy.zz          #列出某个域中的所有域名</p>
</blockquote>
</li>
<li><blockquote>
<p>exit                 #退出  </p>
</blockquote>
</li>
</ol>
<p>漏洞检验-不存在漏洞</p>
<blockquote>
<p>nslookup  </p>
</blockquote>
<p>Server:  lkwifi.cn<br>Address:  192.168.68.1</p>
<p>*** lkwifi.cn can’t find nslookup: Non-existent domain</p>
<blockquote>
<p>server ss2.bjfu.edu.cn  </p>
</blockquote>
<p>Default Server:  ss2.bjfu.edu.cn<br>Address:  202.204.112.67</p>
<blockquote>
<p>ls bjfu.edu.cn  </p>
</blockquote>
<p>[ss2.bjfu.edu.cn]<br>*** Can’t list domain bjfu.edu.cn: Query refused<br>The DNS server refused to transfer the zone bjfu.edu.cn to your computer. If this<br>is incorrect, check the zone transfer security settings for bjfu.edu.cn on the DNS<br>server at IP address 202.204.112.67.</p>
<blockquote>
<p>exit   </p>
</blockquote>
<ul>
<li><p>nmap<br>利用nmap漏洞检测脚本”dns-zone-transfer”进行检测  </p>
<blockquote>
<p>nmap –script dns-zone-transfer –script-args  dns-zone-transfer.domain=xxx.edu.cn -p 53 -Pn dns.xxx.edu.cn</p>
</blockquote>
<pre><code>--script dns-zone-transfer 表示加载nmap漏洞检测脚本dns-zone-transfer.nse，扩展名.nse可省略

--script-args dns-zone-transfer.domain=xxx.edu.cn 向脚本传递参数，设置列出某个域中的所有域名

-p 53 设置扫描53端口

-Pn 设置通过Ping发现主机是否存活
</code></pre></li>
<li><p>dig<br>使用说明 dig -h  </p>
<p>漏洞测试</p>
<blockquote>
<p>dig @dns.xxx.edu.cn axfr xxx.edu.cn</p>
</blockquote>
<p><strong>axfr</strong>是q-type类型的一种:<br>axfr类型是Authoritative Transfer的缩写，指请求传送某个区域的全部记录。  </p>
</li>
</ul>
<h2 id="六、查找真实IP"><a href="#六、查找真实IP" class="headerlink" title="六、查找真实IP"></a>六、查找真实IP</h2><p>  如果挖掘的目标购买了CDN服务，可以直接ping目标的域名，但得到的并非真正的目标Web服务器，只是离我们最近的一台目标节点的CDN服务器，这就导致了我们没法直接得到目标的真实IP段范围。</p>
<h3 id="CDN简介"><a href="#CDN简介" class="headerlink" title="CDN简介"></a>CDN简介</h3><p>  CDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。</p>
<h3 id="国内外CDN"><a href="#国内外CDN" class="headerlink" title="国内外CDN"></a>国内外CDN</h3><p>国内常见CDN：  </p>
<ul>
<li>阿里云</li>
<li>腾讯云</li>
<li>百度云</li>
<li>网宿科技(ChinanNet Center)</li>
<li>蓝汛</li>
<li>金山云</li>
<li>UCloud</li>
<li>网易云</li>
<li>世纪互联</li>
<li>七牛云</li>
<li>京东云等</li>
</ul>
<p>国外常见CDN：</p>
<ul>
<li>Akamai(阿卡迈)</li>
<li>Limelight Networks(简称LLNW)</li>
<li>AWS Cloud(亚马逊)</li>
<li>Google(谷歌)</li>
<li>Comcast(康卡斯特)</li>
</ul>
<h3 id="判断目标是否存在CDN"><a href="#判断目标是否存在CDN" class="headerlink" title="判断目标是否存在CDN"></a>判断目标是否存在CDN</h3><p>  由于CDN需要代价，一般小企业很大几率不会存在CDN服务。<br>  假如一些企业存在CDN服务，那该如何寻找其真实IP呢，往下看，常见几种手法：  </p>
<ol>
<li>Ping目标主域<br>通常通过ping目标主域，观察域名的解析情况，以此来判断其是否使用了CDN，如果在返回信息中，发现域名解析成其他域名，即采用CDN。  </li>
<li><p>Nslookup<br>不同DNS域名解析   </p>
<blockquote>
<p>nslookup <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=" title="http://www.baidu.com">www.baidu.com<i class="fa fa-external-link"></i></span> 8.8.8.8<br>nslookup <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=" title="http://www.baidu.com">www.baidu.com<i class="fa fa-external-link"></i></span> 114.114.114.114   </p>
</blockquote>
<p>将上面两条命令返回的域名解析情况进行对比<br>不同DNS域名解析情况对比，判断其是否使用了CDN<br>不同DNS解析结果若不一样，很有可能存在CDN服务</p>
</li>
<li><p>nslookup默认解析<br>若解析结果有多个，很有可能存在CDN，相反，若解析结果有一个，可能不存在CDN(不能肯定)</p>
</li>
<li><p>全国Ping<br>利用全国多地区的ping服务器操作，然后对比每个地区ping出的IP结果，查看这些IP是否一致， 如果都是一样的，极有可能不存在CDN。如果IP大多不太一样或者规律性很强，可以尝试查询这些IP的归属地，判断是否存在CDN。</p>
<ul>
<li>在线网址<br>Ping检测-站长工具<br><span class="exturl" data-url="aHR0cDovL3BpbmcuY2hpbmF6LmNvbS8=" title="http://ping.chinaz.com/">http://ping.chinaz.com/<i class="fa fa-external-link"></i></span><br>17CE<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuMTdjZS5jb20v" title="https://www.17ce.com/">https://www.17ce.com/<i class="fa fa-external-link"></i></span><br>ipip<br><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pcGlwLm5ldC9uZXdwaW5nLnBocA==" title="https://tools.ipip.net/newping.php">https://tools.ipip.net/newping.php<i class="fa fa-external-link"></i></span> (支持国内、国外)</li>
</ul>
</li>
</ol>
<ul>
<li>工具查询<br>这里工具只能作为辅助，有一定误报的概率，只能作为参考<br>Cdnplanet<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2RucGxhbmV0LmNvbS90b29scy9jZG5maW5kZXIv" title="https://www.cdnplanet.com/tools/cdnfinder/">https://www.cdnplanet.com/tools/cdnfinder/<i class="fa fa-external-link"></i></span> （查询可能比较慢）</li>
</ul>
<h2 id="七、绕过CDN查找真实IP"><a href="#七、绕过CDN查找真实IP" class="headerlink" title="七、绕过CDN查找真实IP"></a>七、绕过CDN查找真实IP</h2><p>  在确认了目标确实用了CDN以后，就需要绕过CDN寻找目标的真实IP，下面介绍一些常规的方法。</p>
<h3 id="内部邮箱源"><a href="#内部邮箱源" class="headerlink" title="内部邮箱源"></a>内部邮箱源</h3><p>  一般的邮件系统都在内部，没有经过CDN的解析，通过利用目标网站的邮箱注册、找回密码或者RSS订阅等功能，查看邮件、寻找邮件头中的邮件服务器域名IP，ping这个邮件服务器的域名,就可以获得目标的真实IP。<br>  <strong>注意：必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的。</strong></p>
<h3 id="国外请求"><a href="#国外请求" class="headerlink" title="国外请求"></a>国外请求</h3><p>  很多时候国内的CDN对国外得覆盖面并不是很广，故此可以利用此特点进行探测。通过国外代理访问就能查看真实IP了，或者通过国外的DNS解析，可能就能得到真实的IP。</p>
<ul>
<li><p>国际Ping<br>ipip<br><span class="exturl" data-url="aHR0cHM6Ly90b29scy5pcGlwLm5ldC9uZXdwaW5nLnBocA==" title="https://tools.ipip.net/newping.php">https://tools.ipip.net/newping.php<i class="fa fa-external-link"></i></span><br>ASM<br><span class="exturl" data-url="aHR0cHM6Ly9hc20uY2EuY29tL2VuL3BpbmcucGhw" title="https://asm.ca.com/en/ping.php">https://asm.ca.com/en/ping.php<i class="fa fa-external-link"></i></span>  </p>
</li>
<li><p>国外DNS解析<br>世界各地DNS服务器地址大全：<br><span class="exturl" data-url="aHR0cDovL3d3dy5hYjE3My5jb20vZG5zL2Ruc193b3JsZC5waHA=" title="http://www.ab173.com/dns/dns_world.php">http://www.ab173.com/dns/dns_world.php<i class="fa fa-external-link"></i></span><br>美国加利福尼亚州山景市谷歌公司DNS服务器： 8.8.4.4</p>
</li>
</ul>
<h3 id="分站域名-amp-C段查询"><a href="#分站域名-amp-C段查询" class="headerlink" title="分站域名&amp;C段查询"></a>分站域名&amp;C段查询</h3><p>  很多网站主站的访问量会比较大，所以主站都是挂CDN的，但是分站可能没有挂CDN,可以通过ping二级域名获取分站IP， 可能会出现分站和主站不是同一个IP但在同一个C段下面的情况，从而能判断出目标的真实IP段。  </p>
<ul>
<li>分站域名<br>具体见上面&lt;收集子域名信息&gt;部分</li>
<li><p>C段查询  </p>
<ol>
<li><p>在线查询</p>
</li>
<li><p>工具<br>K8_C段旁注工具6.0、nmap、IISPutScanner、小米范WEB查找器等<br>小米范WEB查找器：<br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcExqYVFLRg==" title="http://pan.baidu.com/s/1pLjaQKF">http://pan.baidu.com/s/1pLjaQKF<i class="fa fa-external-link"></i></span></p>
</li>
<li><p>网络资产搜索引擎<br>Fofa、Shodan、ZoomEye<br>利用这些网络空间资产搜索引擎来搜索暴露在外的端口信息<br>利用语法搜索C段信息</p>
</li>
<li><p>网站漏洞<br>通过网站的信息泄露如phpinfo泄露，github信息泄露，命令执行等漏洞获取真实ip。<br>一些测试文件，如：phpinfo、test等</p>
</li>
<li><p>SSRF漏洞<br>服务器主动向外发起连接，找到真实IP地址</p>
</li>
<li><p>查询域名解析记录<br>一般网站从部署开始到使用cdn都有一个过程，周期如果较长的话 则可以通过这类历史解析记录查询等方式获取源站ip，查看IP与域名绑定的历史记录，可能会存在使用CDN前的记录。</p>
</li>
</ol>
<ul>
<li><p>在线网站查询  </p>
<pre><code>dnsdb 
https://www.dnsdb.io

NETCRAFT 
https://sitereport.netcraft.com/?url=

viewdns 
https://viewdns.info/

threatbook 
https://x.threatbook.cn/

securitytrails   
https://securitytrails.com/
</code></pre></li>
</ul>
<ol start="7">
<li><p>目标网站APP应用<br>如果目标网站有自己的App，可以尝试利用Fiddler或Burp Suite抓取App的请求，从里面找到目标的真实IP。</p>
</li>
<li><p>网络空间引擎搜索<br>shodan、FOFA、zoomeye  </p>
</li>
</ol>
</li>
</ul>
<hr>
<p>以上内容于合天智汇公众号所看，皆为摘抄！如有侵权，联系删文！<br>原文作者： Qftm<br>原文地址：<br><span class="exturl" data-url="aHR0cHM6Ly9tLnNoaWd1YW5na2V5LmNvbS9hY3Rpdml0eS9zcHJpbmc/Y2hhbm5lbElkPTIwMjEmYW1wO2FtcCUzQmZyb209Z3p3JmFtcDthbXAlM0Jjc3RmPQ==" title="https://m.shiguangkey.com/activity/spring?channelId=2021&amp;amp%3Bfrom=gzw&amp;amp%3Bcstf=">https://m.shiguangkey.com/activity/spring?channelId=2021&amp;amp%3Bfrom=gzw&amp;amp%3Bcstf=<i class="fa fa-external-link"></i></span>  </p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>信安学习笔记（一）</title>
    <url>/2020/01/20/%E4%BF%A1%E5%AE%89%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="信息安全基础（软考）"><a href="#信息安全基础（软考）" class="headerlink" title="信息安全基础（软考）"></a>信息安全基础（软考）</h1><h2 id="软考视频笔记"><a href="#软考视频笔记" class="headerlink" title="软考视频笔记"></a>软考视频笔记</h2><h3 id="信息安全遵循的木桶原则"><a href="#信息安全遵循的木桶原则" class="headerlink" title="信息安全遵循的木桶原则"></a>信息安全遵循的木桶原则</h3><ol>
<li>保护、检测、响应（PDR）策略是确保信息系统和网络系统安全的基本策略，在信息系统和网络系统中，系统的安全状态是系统的平衡状态或稳定状态。</li>
<li>系统论是研究系统的一般模式、结构和规律的科学。</li>
<li>控制论是研究机器、生命社会中控制和通信的一般规律的科学。</li>
<li>“只有从信息系统的硬件和软件的底层做起，从整体上综合采取措施，才能比较有效地保证信息系统的安全。</li>
<li>木桶原则正是系统论的思想再信息安全领域的体现。</li>
<li><strong>木桶原则是指对信息进行均衡、全面的防护，提高整个系统的”安全最低点”的安全性能。</strong>  <a id="more"></a>
<h3 id="美国国防部可信计算机系统评估系统TCSEC"><a href="#美国国防部可信计算机系统评估系统TCSEC" class="headerlink" title="美国国防部可信计算机系统评估系统TCSEC"></a><strong>美国国防部可信计算机系统评估系统TCSEC</strong></h3>访问控制系统实现的安全级别，这和计算机系统的安全级别一致，分为四组七个等级：具体为D、C（C1、C2）、B（B1、B2、B3）和A（1），安全级别从左到右逐步提高，各级间向下兼容。</li>
<li>D级别是最低的安全级别，对系统提供最小的安全防护。系统的访问控制没有限制，无需登陆系统就可以访问数据，这个级别的系统包括DOS，WINDOWS98等。</li>
<li>C级别有两个子系统，C1级和C2。C1级称为选择性保护级（Discrtionary Security Protection）<strong>可以实现自主安全防护</strong>，对用户和数据的分离，保护或限制用户权限的传播。</li>
<li>C2级<strong>具有访问控制环境的权力，比C1的访问控制划分的更为详细，能够实现受控安全保护、个人账户管理、审计和资源隔离。</strong>这个级别的系统包括UNIX、LINUX和WindowsNT系统。C级别属于自由选择性安全保护，在设计上有自我保护和审计功能，可对主体行为进行审计与约束。</li>
<li>B级别包括B1、B2和B3三个级别，B级别能够提供强制性安全保护和多级安全。强制防护是指定义及保持标记的完整性，信息资源的拥有者不具有更改自身的权限，系统数据完全处于访问控制管理的监督下。</li>
<li>B1级称为标识安全保护（Labeled Security Protection）</li>
<li>B2级称为结构保护级别(Security Protection)，要求访问控制的所有对象都有安全标签以实现低级的用户不能访问敏感信息，对于设备、端口等也应标注安全级别。</li>
<li>B3级别称为安全域保护级别（Security Domain），这个级别使用安装硬件的方式来加强域的安全，比如用内存管理硬件来防止无授权访问。</li>
<li>A级别只有A1这一级别，A级别称为验证设计级（Verity Design），是目前最高的安全级别，在A级别中，安全的设计必须给出形式化设计说明和验证，需要有严格的数学推导过程，同时应该包含秘密信道和可信分布的分析，也就是说要保证系统的部件来源有安全保证，例如对这些软件和硬件在生产、销售、运输中进行严密跟踪和严格的配置管理，以避免出现安全隐患。</li>
</ol>
<h3 id="可计算理论"><a href="#可计算理论" class="headerlink" title="可计算理论"></a>可计算理论</h3><p>  网络空间安全学科的许多问题是计算安全问题，因此，计算理论也是网络安全学科的理论基础，其中包括可计算性理论和计算复杂性理论等。<br>  可计算性理论是研究计算的一般性质的数学理论。它通过建立计算的数学模型，精确区分哪些问题是可计算的，哪些问题是不可计算的。对于判断问题，可计算性理论研究哪些问题是可判断问题，哪些问题是不可判断问题。<br>  计算复杂性理论使用数学方法对计算中所需的各种资源的耗费作定量的分析，并研究各类问题之间在计算复杂程度上的相互关系和基本性质。计算复杂性理论则进一步研究现实的可计算性。</p>
<ol>
<li>授权是信息系统访问控制的核心，信息系统是安全的，其授权系统必须是安全的。</li>
<li>可计算理论是信息系统安全的理论基础之一。</li>
<li>计算复杂性理论是密码学的理论基础之一。</li>
<li>密码在理论上是安全的是指密码破译是理论不可计算的。例如，“一次一密”密码。</li>
<li>密码是实际安全的或计算上安全的是指密码破译虽然是理论可计算的，但由于计算复杂性太大而实际上不可计算。</li>
<li>密码在计算上安全是指其余的密码</li>
</ol>
<h3 id="信息管理体系"><a href="#信息管理体系" class="headerlink" title="信息管理体系"></a>信息管理体系</h3><ul>
<li>密码管理<br>密码技术是保护信息安全的最有效手段，也是保护信息安全的最关键技术。    </li>
</ul>
<ol>
<li>商用密码管理原则<br>统一领导，集中管理，定点研制，专控经营，满足使用。</li>
<li>我国第一个商用密码算法系列<br>(1)对称密码算法：SMS4<br>(2)签名算法：ECDSA<br>(3)密钥协商算法：ECDH<br>(4)杂凑算法：SHA-256<br>(5)随机数生成算法：自行选择<br>ps：密钥协商算法和杂凑算法必须使用指定的椭圆曲线和参数。</li>
</ol>
<ul>
<li>网络管理<br>网络管理从功能讲，包括配置管理、性能管理、安全管理和故障管理等。<br>最突出的特点：对网络组成成分管理的统一性和远程性。 </li>
<li>设备管理</li>
<li>人员管理（最难的）</li>
</ul>
<h3 id="信息安全概念"><a href="#信息安全概念" class="headerlink" title="信息安全概念"></a>信息安全概念</h3><ol>
<li>信息安全：<br>（1）保证系统的硬件、软件及相关数据，使之不因为偶然或恶意的侵犯而遭受破坏、更改和泄露。<br>（2）保证信息系统中信息的<strong>机密性、完整性、可用性</strong>等。</li>
<li>信息安全管理体系：是组织在整体或特定范围内建立的信息安全方阵和目标，以及完成这些目标所采用地方法和手段所构成的体系。</li>
<li>国家信息安全等级保护<br>国家信息安全等级保护坚持<strong>自主定级、自主保护</strong>原则。主要根据信息系统在国家安全、经济建设、社会生活中的重要程度，信息系统遭到破坏后对<strong>国家安全、社会秩序、公共利益以及公民</strong>、法人和其他组织的合法权益的危害成都等因素确定。</li>
<li>计算机系统安全保护能力五个等级  </li>
</ol>
<ul>
<li>用户自主保护级：通过隔离用户和数据，使用户具备自主安全保护的能力。<br><strong>策略</strong>：自主访问控制、身份鉴别、自主完整性<br>适用范围：普通内联网用户</li>
<li>系统审计保护级：支持自主保护；具有<strong>访问审计能力</strong>，记录与分析追查事故责任人，使所有的用户对<strong>自己行为的合法性负责</strong>。<br><strong>策略</strong>：  +客体重用、审计<br>适用范围：通过内联网或国际网进行商务活动，需要保密的非重要单位</li>
<li>安全标记保护级：实施<strong>强制访问控制</strong>、对访问者和访问对象（进度、文件、段、设备等）指定<strong>不同安全标记。</strong><br><strong>策略： +强制访问控制、标记</strong><br>适用范围：地方各级国家机关、金融单位机构、邮电通信、能源与水源供给部门、交通运输、大型工商与信息技术企业、重点工程建设等单位</li>
<li>结构化保护级：要求将第三级系统中的自主和强制访问控制扩展到所有主体与客体。此外，还要考虑隐蔽通道。本级的计算机信息系统可信计算基必须结构化为关键保护元素和非关键保护元素。<br><strong>策略： +强制访问控制、标记、扩展到所有的主体及客体</strong><br>适用范围：中央级国家机关、广播电视部门、重要物资储备单位、社会应急服务部门、尖端科技企业集团、国家重点科研单位机构和国防建设等部门</li>
<li>访问验证保护级：本级的计算机信息系统可信计算基满足访问监控器需求。访问监控器仲裁主体对客体的全部访问。<br><strong>策略： +访问控制粒度是单个用户，能为客体指定命名用户和用户组，并规定了访问模式；审计时，可直接报警；可信路径等。</strong><br>适用范围：国防关键部门和依法需要对计算机信息系统实施特殊隔离的单位<br>ps：<strong>巧记口令：主系安结访</strong></li>
</ul>
<ol start="5">
<li>涉密信息系统安全分级保护</li>
</ol>
<ul>
<li>秘密级<br>一般的国家机密，泄露会使国家的安全和利益遭受损害。<br>不低于国家信息安全等级保护三级的要求  </li>
<li>机密级<br>是重要的国家秘密，泄露会使国家的安全和利益遭受损害。<br>不低于国家信息安全等级保护四级的要求</li>
<li>绝密级<br>是最重要的国家秘密，泄露会使国家的安全和利益遭受特别严重的损害。<br>不低于国家信息安全等级保护五级的要求<br>ps：实际工作中，要做好涉密信息系统的定级、安全规划方案设计的实施与调整、安全运行及维护。</li>
</ul>
<h3 id="信息安全风险评估与管理"><a href="#信息安全风险评估与管理" class="headerlink" title="信息安全风险评估与管理"></a>信息安全风险评估与管理</h3><ol>
<li>信息系统的安全风险：是指由于系统存在的脆弱性，人为或自然的威胁导致安全事件发生的可能性及其造成的影响。</li>
<li>信息安全风险评估：是指依据有关信息安全技术标准，对信息系统及由其处理、传输和存储的信息的保密性、完整性和可用性等安全属性进行科学评价的过程。</li>
<li>风险评估的主要任务</li>
</ol>
<ul>
<li>识别组织面临的各种风险</li>
<li>评估风险概率和可能带来的负面影响</li>
<li>确定组织承受风险的能力</li>
<li>确定风险降低和控制的优先等级</li>
<li>推荐风险降低政策</li>
</ul>
<ol start="4">
<li>风险评估流程</li>
</ol>
<ul>
<li>确定资产<br>明确资产的价值，包括有形和无形资产 </li>
<li>脆弱性和威胁分析<br>发现资产的脆弱点及可能引发的威胁 </li>
<li>制定及评估控制措施<br>研究消除、减轻、转移威胁风险的手段</li>
<li>决策<br>包括评估风险影响、排列风险、制定决策（接受、避免和转移风险） </li>
<li>沟通与交流<br>决策必须经领导层签字与批准，并与各方面就决策结论进行沟通 </li>
<li>监督实施<br>监督安全措施的实施  </li>
</ul>
<ol start="5">
<li>风险评估的方法与分类  </li>
</ol>
<ul>
<li>风险评估方法的分类：  </li>
</ul>
<ol>
<li>定量的风险评估方法</li>
<li>定性的风险评估方法</li>
<li>定量与定性相结合的风险评估方法</li>
</ol>
<ul>
<li>风险评估方法</li>
</ul>
<ol>
<li>定量的风险评估方法</li>
<li>定性的风险评估方法</li>
<li>定量与定性相结合的风险评估方法</li>
<li>层次分析法是典型的定量与定性相结合的风险评估方法   </li>
</ol>
<h4 id="终于搞定了，这笔记写得有点多，看来下次得再精炼点！"><a href="#终于搞定了，这笔记写得有点多，看来下次得再精炼点！" class="headerlink" title="终于搞定了，这笔记写得有点多，看来下次得再精炼点！"></a>终于搞定了，这笔记写得有点多，看来下次得再精炼点！</h4>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>软考</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown学习笔记</title>
    <url>/2020/01/18/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、Markdown介绍"><a href="#一、Markdown介绍" class="headerlink" title="一、Markdown介绍"></a>一、Markdown介绍</h1><p>  Markdown 是一种轻量级标记语言，创始人为 John Gruber。它允许人们「使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档」——维基百科<br><a id="more"></a></p>
<h1 id="二、markdown优点"><a href="#二、markdown优点" class="headerlink" title="二、markdown优点"></a>二、markdown优点</h1><ol>
<li><p>其专注于文字内容本身，语法格式简单，易学，不像LaTeX那样复杂；</p>
</li>
<li><p>纯文本，易读易写，多系统兼容，可以方便地纳入版本控制；</p>
</li>
<li><p>语法简单，没有什么学习成本，能轻松在码字的同时做出美观大方的排版。</p>
</li>
<li><p>最重要的就是免费开源！ </p>
</li>
</ol>
<h1 id="三、编辑工具"><a href="#三、编辑工具" class="headerlink" title="三、编辑工具"></a>三、编辑工具</h1><ol>
<li><p>VScode</p>
</li>
<li><p>Notepad++  </p>
</li>
<li>IntelliJ IDEA</li>
<li>Markpad2</li>
<li>在线编辑器-简书、CSDN等技术社区，写作平台</li>
</ol>
<h1 id="四、编辑语法"><a href="#四、编辑语法" class="headerlink" title="四、编辑语法"></a>四、编辑语法</h1><p>  Ⅰ. 标题<br>    对于标题，只需要在文字前面加#就可以了，#的数量决定了标题大小，最多只有六级，代码示例如下：  </p>
<pre><code>  # 一号标题  
  ## 二号标题  
  ### 三号标题  
  #### 四号标题  
  ##### 五号标题  
  ######  六号标题  
ps: &quot;#&quot;后面有空格，对于这种类似符号+文字之间都需要一个空格！  
</code></pre><p>  Ⅱ. 列表  </p>
<ol>
<li><p>无序列表  </p>
<pre><code>对于无序列表，只需要在文字前加个&quot;*&quot;就行了，代码示例如下：

    * 文字1  
    * 文字2  
    * 文字3   
</code></pre></li>
<li><p>有序列表  </p>
<pre><code>有序列表只需要在前面写序号即可，意后面需要跟个点，编译器会自动编号。代码示例如下：  

    1. 文字1  
    2. 文字2  
    3. 文字3  
</code></pre></li>
<li><p>嵌套列表  </p>
<pre><code>无序和有序列表之间都可以相互嵌套，注意这里的嵌套列表，需要缩进四个空格，可以直接用tab。代码示例如下：

    * 文字1  
        1. sub 文字1  
        2. sub 文字2  
    * 文字2
</code></pre><p>Ⅲ. 段落和换行符  </p>
<ol>
<li>段落之间有一个空行。如果没有空行，那么它们会被认为是一个段落。  </li>
<li>同一个段落中不同的行之间的换行符会被一个空格代替。  </li>
<li>一行结束时，如果要强制换行，可以在行尾输入两个及以上空格。  </li>
</ol>
<p>Ⅳ. 引用<br> 使用&gt;来表示引用，你可以只在第一行写上&gt;，后面的行可以省略。直到碰到空行，这个引用会一直有效。引用可以嵌套，即引用中还可以有引用，代码如下：</p>
<blockquote>
<p>好好学习，天天向上！<br>Have a good time !</p>
</blockquote>
<p>Ⅴ. 加粗、斜体及删除线  </p>
</li>
<li><p>加粗语法只需要在字体前后加**即可，有些编译器也可以使用Ctrl+B快捷键  </p>
<p><strong>加粗</strong>语法</p>
</li>
<li><p>斜体语法就是在字体前后加一个*即可  </p>
<p><em>斜体</em>语法</p>
</li>
<li><p>删除线语法就是在字体前后加~~  </p>
<p><del>删除</del>语法      </p>
<p>Ⅵ. 链接  </p>
</li>
<li><p>行内链接<br>格式就是用[]把文字括起来，链接放在后面的()里面即可，代码示例如下： </p>
<p>[搜狗]{https:// <span class="exturl" data-url="aHR0cDovL3d3dy5zb3Vnb3UuY29tfQ==" title="http://www.sougou.com}">www.sougou.com}<i class="fa fa-external-link"></i></span></p>
<p>ps:链接的url后面可以跟title，格式为文字，url和title之间有个空格，title需要用引号或者小括号包起来。</p>
</li>
<li><p>自动链接<br> 在不指定链接文字的时候，可以用&lt;&gt;直接生成一个链接，代码如下：  </p>
<p>&lt; <span class="exturl" data-url="aHR0cHM6Ly93d3cuc291Z291LmNvbQ==" title="https://www.sougou.com">https://www.sougou.com<i class="fa fa-external-link"></i></span> &gt;</p>
<p>Ⅶ. 水平线<br> 水平线有如下两种语法，三个-或者*即可，运行结果都是一样的：  </p>
<hr>
<hr>
<p>Ⅷ. 代码</p>
</li>
<li><p>缩进代码块<br>在Markdown中，以四个空字符开头的段落被认为是代码  </p>
</li>
<li><p>行内代码   </p>
<p>用’’把代码括起来即可，如’print(“hello，world！”)’</p>
</li>
<li><p>代码框<br>大段代码可使用’’’把代码括起来，代码示例如下：  </p>
<p>‘’’<br>if(ture):<br>   print(“Hello，China！”)<br>else:<br>   print(“Hello,World！”)<br>‘’’</p>
<p>Ⅷ. 表格<br>关于表格，一般编辑器都有，VScode的快捷键是按两下Ctrl+m，不过要安装插件才可以使用。也可以使用|来分隔不同单元格，使用-来分隔表头和其他行。<br>标头1 | 标头2 | 标头3<br>———|———-|———<br>A1 | B1 | C1<br>A2 | B2 | C2<br>A3 | B3 | C3</p>
</li>
</ol>
<h3 id="暂且这样吧！基本操作应该就这些！后续再补！"><a href="#暂且这样吧！基本操作应该就这些！后续再补！" class="headerlink" title="暂且这样吧！基本操作应该就这些！后续再补！"></a>暂且这样吧！基本操作应该就这些！后续再补！</h3>]]></content>
      <categories>
        <category>基本操作</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
